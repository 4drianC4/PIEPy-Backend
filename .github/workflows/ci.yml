name: Node.js CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: PIEPy
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    
    strategy:
      matrix:
        node-version: [22.x]
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Create Python virtual environment
      run: |
        python -m venv venv
        source venv/bin/activate
        echo "VIRTUAL_ENV=$VIRTUAL_ENV" >> $GITHUB_ENV
        echo "$VIRTUAL_ENV/bin" >> $GITHUB_PATH

    - name: Install Python dependencies
      run: |
        source venv/bin/activate
        pip install --upgrade pip
        pip install pylint

    - name: Install dependencies
      run: npm install

    - name: Set up environment variables
      run: |
        echo "NAMEDB=PIEPy" >> $GITHUB_ENV
        echo "USERDB=postgres" >> $GITHUB_ENV
        echo "PASSWORDDB=postgres" >> $GITHUB_ENV
        echo "HOSTDB=localhost" >> $GITHUB_ENV
        echo "PORTDB=5432" >> $GITHUB_ENV 

    - name: Run migrations
      run: npx sequelize-cli db:migrate
        
    - name: Run tests
      run: npm test
    
    - name: Run lint
      run: npm run lint